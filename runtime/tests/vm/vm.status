# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

# Issue 28198
cc/IsolateReload_PendingUnqualifiedCall_InstanceToStatic: Fail, Crash, Timeout
cc/IsolateReload_PendingUnqualifiedCall_StaticToInstance: Fail, Crash, Timeout
cc/IsolateReload_PendingConstructorCall_AbstractToConcrete: Fail, Crash, Timeout
cc/IsolateReload_PendingConstructorCall_ConcreteToAbstract: Fail, Crash, Timeout
cc/IsolateReload_PendingStaticCall_DefinedToNSM: Fail, Crash, Timeout
cc/IsolateReload_PendingStaticCall_NSMToDefined: Fail, Crash, Timeout

# These tests are expected to crash on all platforms.
cc/ArrayNew_Overflow_Crash: Crash, Timeout
cc/AllocGeneric_Overflow: Crash, Timeout
cc/CodeImmutability: Crash
cc/Fail0: Fail
cc/Fail1: Fail
cc/Fail2: Fail

cc/Dart2JSCompileAll: Crash # Issue 27369
cc/Dart2JSCompilerStats: Crash # Issue 27369

cc/SNPrint_BadArgs: Skip

cc/Profiler_InliningIntervalBoundry: Skip # Differences in ia32, debug, release

# Flaky on buildbot. Issue 5133 and 10409.
cc/Sleep: Pass, Fail

dart/data_uri_import_test/none: SkipByDesign

[ $mode == debug && $arch != ia32 && $system != windows ]
cc/Profiler_ArrayAllocation: Fail # 28304
cc/Profiler_BasicSourcePosition: Fail # 28304
cc/Profiler_BasicSourcePositionOptimized: Fail, Crash # 28304, # 28282
cc/Profiler_BinaryOperatorSourcePosition: Fail # 28304
cc/Profiler_BinaryOperatorSourcePositionOptimized: Fail # 28304
cc/Profiler_ChainedSamples: Fail # 28304
cc/Profiler_ClosureAllocation: Fail # 28304
cc/Profiler_CodeTicks: Fail # 28304
cc/Profiler_ContextAllocation: Fail # 28304
cc/Profiler_FunctionInline: Fail # 28304
cc/Profiler_FunctionTicks: Fail # 28304
cc/Profiler_SourcePosition: Fail # 28304
cc/Profiler_SourcePositionOptimized: Fail # 28304
cc/Profiler_ToggleRecordAllocation: Fail # 28304
cc/Profiler_TrivialRecordAllocation: Fail # 28304
cc/Profiler_TypedArrayAllocation: Fail # 28304

[ $mode == debug ]
# This is a benchmark that is not informative in debug mode.
cc/CorelibIsolateStartup: Skip
# Negative tests of VerifiedMemory should crash iff in DEBUG mode.
# TODO(koda): Improve support for negative tests.
cc/VerifyImplicit_Crash: Crash
cc/VerifyExplicit_Crash: Crash
# It can take some time for all the isolates to shutdown in a Debug build.
dart/spawn_shutdown_test: Pass, Slow  # VM Shutdown test

# The following section refers to the dart vm tests which live under
# runtime/tests/vm/dart.
[ $system == windows ]
cc/Dart2JSCompileAll: Skip
cc/ExternalizeConstantStrings: Skip
cc/Service_Profile: Skip
cc/Dart2JSCompilerStats: Skip
cc/CorelibCompilerStats: Skip

# Profiler is completely disabled in SIMDBC builds.
# On the simluator stack traces produced by the Profiler do not match
# up with the real Dart stack trace and hence we don't get correct
# symbol names.
[ $arch == simarm || $arch == simarmv6 || $arch == simarmv5te || $arch == simarm64 || $arch == simmips || $arch == simdbc  || $arch == simdbc64 ]
cc/Service_Profile: Skip
cc/Profiler_AllocationSampleTest: Skip
cc/Profiler_ArrayAllocation: Skip
cc/Profiler_BasicSourcePosition: Skip
cc/Profiler_BasicSourcePositionOptimized: Skip
cc/Profiler_BinaryOperatorSourcePosition: Skip
cc/Profiler_BinaryOperatorSourcePositionOptimized: Skip
cc/Profiler_ChainedSamples: Skip
cc/Profiler_ClosureAllocation: Skip
cc/Profiler_CodeTicks: Skip
cc/Profiler_ContextAllocation: Skip
cc/Profiler_FunctionInline: Skip
cc/Profiler_FunctionTicks: Skip
cc/Profiler_InliningIntervalBoundry: Skip
cc/Profiler_IntrinsicAllocation: Skip
cc/Profiler_SampleBufferIterateTest: Skip
cc/Profiler_SampleBufferWrapTest: Skip
cc/Profiler_SourcePosition: Skip
cc/Profiler_SourcePositionOptimized: Skip
cc/Profiler_StringAllocation: Skip
cc/Profiler_StringInterpolation: Skip
cc/Profiler_ToggleRecordAllocation: Skip
cc/Profiler_TrivialRecordAllocation: Skip
cc/Profiler_TypedArrayAllocation: Skip
cc/Profiler_GetSourceReport: Skip

# Following tests are failing in a weird way on macos/ia32/debug builds
# need to investigate.
[ $runtime == vm && $mode == debug && $arch == ia32 && $system == macos ]
cc/Profiler_TrivialRecordAllocation: Skip
cc/Profiler_ToggleRecordAllocation: Skip
cc/Profiler_FunctionTicks: Skip
cc/Profiler_CodeTicks: Skip
cc/Profiler_IntrinsicAllocation: Skip
cc/Profiler_ArrayAllocation: Skip
cc/Profiler_ContextAllocation: Skip
cc/Profiler_ClosureAllocation: Skip
cc/Profiler_TypedArrayAllocation: Skip
cc/Profiler_StringAllocation: Skip
cc/Profiler_StringInterpolation: Skip
cc/Profiler_BasicSourcePosition: Skip
cc/Profiler_BasicSourcePositionOptimized: Skip
cc/Profiler_ChainedSamples: Skip
cc/Profiler_FunctionInline: Skip
cc/Profiler_SourcePosition: Skip
cc/Profiler_SourcePositionOptimized: Skip
cc/Profiler_BinaryOperatorSourcePosition: Skip
cc/Profiler_BinaryOperatorSourcePositionOptimized: Skip

[ $compiler == dart2js ]
dart/redirection_type_shuffling_test: Skip # Depends on lazy enforcement of type bounds
dart/byte_array_test: Skip # compilers not aware of byte arrays
dart/byte_array_optimized_test: Skip # compilers not aware of byte arrays
dart/simd128float32_array_test: Skip # compilers not aware of Simd128
dart/simd128float32_test: Skip # compilers not aware of Simd128

[ $compiler == dart2js ]
# The source positions do not match with dart2js.
dart/optimized_stacktrace_test: RuntimeError

# Methods can be missing in dart2js stack traces due to inlining.  Also when
# minifying they can be renamed, which is issue 7953.
dart/inline_stack_frame_test: RuntimeError, Pass # Issue 7953

[ $compiler == dart2js && $cps_ir && $checked ]
dart/*: Skip # checked mode + cpsir not supported yet. Issue 25761

[ $compiler == dart2js || $compiler == dart2analyzer ]
# Data uri's not supported by dart2js or the analyzer.
dart/data_uri*test: Skip

[ $arch == mips ]
cc/Int8ListLengthMaxElements: Skip # Issue 23536, uses 1 GB memory.

[ $arch == mips && $mode == debug ]
cc/FindCodeObject: SkipSlow # Takes more than 8 minutes. Issue 17440

[ $compiler == dart2analyzer ]
dart/optimized_stacktrace_test: StaticWarning

[ $compiler == app_jit ]
dart/snapshot_version_test: Fail,OK # Expects to find script snapshot relative to Dart source.

[ $runtime != vm ]
dart/snapshot_version_test: SkipByDesign  # Spawns processes
dart/spawn_infinite_loop_test: Skip  # VM shutdown test
dart/spawn_shutdown_test: Skip  # VM Shutdown test
dart/hello_fuchsia_test: SkipByDesign # This is a test for fuchsia OS

[ ($runtime == vm || $runtime == dart_precompiled) && $mode == debug && $builder_tag == asan ]
cc/Dart2JSCompileAll: SkipSlow  # Timeout.

[ $builder_tag == asan ]
cc/CodeImmutability: Fail,OK # Address Sanitizer turns a crash into a failure.

[ $builder_tag == asan && $arch == x64 ]
cc/Log_Basic: Fail # Issue 28347
cc/Log_Block: Fail # Issue 28347
cc/Log_Macro: Fail # Issue 28347

cc/Debug_DeleteBreakpoint: Fail # Issue 28348

cc/IsolateReload_ChangeInstanceFormat7: Fail # Issue 28349
cc/IsolateReload_ClassAdded: Fail # Issue 28349
cc/IsolateReload_ComplexInheritanceChange: Fail # Issue 28349
cc/IsolateReload_ConstFieldUpdate: Fail # Issue 28349
cc/IsolateReload_ConstantIdentical: Fail # Issue 28349
cc/IsolateReload_ConstructorChanged: Fail # Issue 28349
cc/IsolateReload_DanglingGetter_Class: Fail # Issue 28349
cc/IsolateReload_DanglingGetter_Instance: Fail # Issue 28349
cc/IsolateReload_DanglingGetter_Library: Fail # Issue 28349
cc/IsolateReload_DanglingSetter_Class: Fail # Issue 28349
cc/IsolateReload_DanglingSetter_Instance: Fail # Issue 28349
cc/IsolateReload_DanglingSetter_Library: Fail # Issue 28349
cc/IsolateReload_DirectSubclasses_GhostSubclass: Fail # Issue 28349
cc/IsolateReload_DirectSubclasses_Success: Fail # Issue 28349
cc/IsolateReload_EnumAddition: Fail # Issue 28349
cc/IsolateReload_EnumDelete: Fail # Issue 28349
cc/IsolateReload_EnumEquality: Fail # Issue 28349
cc/IsolateReload_EnumIdentical: Fail # Issue 28349
cc/IsolateReload_EnumIdentityReload: Fail # Issue 28349
cc/IsolateReload_EnumReorderIdentical: Fail # Issue 28349
cc/IsolateReload_EnumValuesToString: Fail # Issue 28349
cc/IsolateReload_ExportedLibModified: Fail # Issue 28349
cc/IsolateReload_FunctionReplacement: Fail # Issue 28349
cc/IsolateReload_Generics: Fail # Issue 28349
cc/IsolateReload_ImplicitConstructorChanged: Fail # Issue 28349
cc/IsolateReload_ImportedLibModified: Fail # Issue 28349
cc/IsolateReload_ImportedMixinFunction: Fail # Issue 28349
cc/IsolateReload_LibraryDebuggable: Fail # Issue 28349
cc/IsolateReload_LibraryHide: Fail # Issue 28349
cc/IsolateReload_LibraryImportAdded: Fail # Issue 28349
cc/IsolateReload_LibraryImportRemoved: Fail # Issue 28349
cc/IsolateReload_LibraryLookup: Fail # Issue 28349
cc/IsolateReload_LibraryShow: Fail # Issue 28349
cc/IsolateReload_LiveStack: Fail # Issue 28349
cc/IsolateReload_MainLibModified: Fail # Issue 28349
cc/IsolateReload_MixinChanged: Fail # Issue 28349
cc/IsolateReload_PendingSuperCall: Fail # Issue 28349
cc/IsolateReload_PrefixImportedLibModified: Fail # Issue 28349
cc/IsolateReload_SavedClosure: Fail # Issue 28349
cc/IsolateReload_SavedClosure: Fail # Issue 28349
cc/IsolateReload_SimpleConstFieldUpdate: Fail # Issue 28349
cc/IsolateReload_SmiFastPathStubs: Fail # Issue 28349
cc/IsolateReload_StaticTearOffRetainsHash: Fail # Issue 28349
cc/IsolateReload_StaticValuePreserved: Fail # Issue 28349
cc/IsolateReload_StaticValuePreserved: Fail # Issue 28349
cc/IsolateReload_SuperClassChanged: Fail # Issue 28349
cc/IsolateReload_TearOff_AddArguments2: Fail # Issue 28349
cc/IsolateReload_TearOff_AddArguments: Fail # Issue 28349
cc/IsolateReload_TearOff_Class_Identity: Fail # Issue 28349
cc/IsolateReload_TearOff_Instance_Equality: Fail # Issue 28349
cc/IsolateReload_TearOff_Library_Identity: Fail # Issue 28349
cc/IsolateReload_TearOff_List_Set: Fail # Issue 28349
cc/IsolateReload_TopLevelFieldAdded: Fail # Issue 28349
cc/IsolateReload_TypeIdentity: Fail # Issue 28349
cc/IsolateReload_TypeIdentityGeneric: Fail # Issue 28349
cc/IsolateReload_TypeIdentityParameter: Fail # Issue 28349

[ $compiler == precompiler ]
dart/byte_array_test: Skip # Incompatible flag --disable_alloc_stubs_after_gc

[ $compiler == precompiler || $mode == product ]
dart/redirection_type_shuffling_test: SkipByDesign # Imports dart:mirrors
cc/CreateMirrorSystem: SkipByDesign # Imports dart:mirrors
cc/CoreSnapshotSize: SkipByDesign # Imports dart:mirrors
cc/StandaloneSnapshotSize: SkipByDesign # Imports dart:mirrors

[ $runtime == dart_precompiled ]
# StackTraces in precompilation omit inlined frames.
dart/inline_stack_frame_test: Pass, RuntimeError
dart/optimized_stacktrace_test: Pass, RuntimeError

[ $compiler == app_jit || $compiler == precompiler ]
dart/data_uri_spawn_test: SkipByDesign # Isolate.spawnUri
dart/optimized_stacktrace_test: SkipByDesign # Requires line numbers

[ $runtime == vm && $mode == product ]
cc/IsolateSetCheckedMode: Fail,OK  # Expects exact type name.
cc/StackTraceFormat: Fail,OK  # Expects exact type name.
cc/String_ScrubName: Fail,OK  # Expects exact type name.
cc/GetFunctionNames: Fail,OK  # Expects exact type name.

[ $arch == simdbc  || $arch == simdbc64 ]
# TODO(vegorov) These tests don't seem to work if FLAG_interpret_irregexp
# is switched on by default because they attempt to call regexp functions
# directly instead of going through JSSyntaxRegExp_ExecuteMatch.
cc/RegExp_ExternalOneByteString: Skip
cc/RegExp_ExternalTwoByteString: Skip
cc/RegExp_OneByteString: Skip
cc/RegExp_TwoByteString: Skip

# TODO(vegorov) Field guards are disabled for SIMDBC
cc/GuardFieldConstructor2Test: Skip
cc/GuardFieldConstructorTest: Skip
cc/GuardFieldFinalListTest: Skip
cc/GuardFieldFinalVariableLengthListTest: Skip
cc/GuardFieldSimpleTest: Skip

# This test is meaningless for DBC as allocation stubs are not used.
cc/RegenerateAllocStubs: Skip

[ $hot_reload || $hot_reload_rollback ]
dart/spawn_shutdown_test: Skip # We can shutdown an isolate before it reloads.
dart/spawn_infinite_loop_test: Skip # We can shutdown an isolate before it reloads.
